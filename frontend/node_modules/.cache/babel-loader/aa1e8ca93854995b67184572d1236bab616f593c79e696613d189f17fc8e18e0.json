{"ast":null,"code":"import * as e from \"react\";\nclass t extends e.Component {\n  constructor(t) {\n    super(t), this.wrapperRef = void 0, this.bottomRef = void 0, this.bottomRef = /*#__PURE__*/e.createRef(), this.wrapperRef = /*#__PURE__*/e.createRef(), this.handleScroll = this.handleScroll.bind(this), this.props.debug && console.log(\"Component cstr\");\n  }\n  getSnapshotBeforeUpdate() {\n    if (this.props.debug && console.log(\"Component \", this.getSnapshotBeforeUpdate.name), this.wrapperRef.current && this.bottomRef.current) {\n      const {\n        viewableDetectionEpsilon: e\n      } = this.props;\n      return t.isViewable(this.wrapperRef.current, this.bottomRef.current, e);\n    }\n    return !1;\n  }\n  componentDidUpdate(e, t, o) {\n    this.props.debug && console.log(\"Component \", this.componentDidUpdate.name);\n    const {\n      forceScroll: r,\n      changeDetectionFilter: n\n    } = this.props;\n    n(e, this.props) && (r || o) && this.bottomRef.current && this.wrapperRef.current && this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\n  }\n  componentDidMount() {\n    this.props.debug && console.log(\"Component \", this.componentDidMount.name), this.bottomRef.current && this.wrapperRef.current && this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\n  }\n  scrollParentToChild(e, o) {\n    const {\n      viewableDetectionEpsilon: r\n    } = this.props;\n    if (!t.isViewable(e, o, r)) {\n      const t = e.getBoundingClientRect(),\n        r = o.getBoundingClientRect().top + e.scrollTop - t.top,\n        {\n          animateScroll: n,\n          onScrollComplete: i\n        } = this.props;\n      n && (n(e, r), i());\n    }\n  }\n  static isViewable(e, t, o) {\n    o = o || 0;\n    const r = e.getBoundingClientRect(),\n      n = t.getBoundingClientRect();\n    return n.top >= r.top && r.top + e.clientHeight - n.top + o >= 0;\n  }\n  handleScroll() {\n    const {\n      viewableDetectionEpsilon: e,\n      onScroll: o\n    } = this.props;\n    o && this.bottomRef.current && this.wrapperRef.current && o(t.isViewable(this.wrapperRef.current, this.bottomRef.current, e));\n  }\n  scrollToBottom() {\n    this.bottomRef.current && this.wrapperRef.current && this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\n  }\n  render() {\n    this.props.debug && console.log(\"Component \", this.render.name);\n    const {\n      children: t,\n      className: o\n    } = this.props; /*#__PURE__*/\n    return e.createElement(\"div\", {\n      className: o,\n      style: {\n        maxHeight: \"inherit\",\n        height: \"inherit\",\n        overflowY: \"auto\"\n      },\n      ref: this.wrapperRef,\n      onScroll: this.handleScroll\n    }, t, /*#__PURE__*/e.createElement(\"div\", {\n      ref: this.bottomRef\n    }));\n  }\n}\nt.defaultProps = {\n  forceScroll: !1,\n  animateScroll: (e, t) => {\n    e.scrollBy ? e.scrollBy({\n      top: t\n    }) : e.scrollTop = t;\n  },\n  onScrollComplete: () => {},\n  changeDetectionFilter: () => !0,\n  viewableDetectionEpsilon: 2,\n  onScroll: () => {}\n};\nexport { t as default };","map":{"version":3,"names":["t","e","Component","constructor","wrapperRef","bottomRef","createRef","handleScroll","bind","props","debug","console","log","getSnapshotBeforeUpdate","name","current","viewableDetectionEpsilon","isViewable","componentDidUpdate","o","forceScroll","r","changeDetectionFilter","n","scrollParentToChild","componentDidMount","getBoundingClientRect","top","scrollTop","animateScroll","onScrollComplete","i","clientHeight","onScroll","scrollToBottom","render","children","className","createElement","style","maxHeight","height","overflowY","ref","defaultProps","scrollBy","default"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\Chat App\\frontend\\node_modules\\react-scrollable-feed\\src\\index.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { CSSProperties } from 'react';\r\n\r\nexport type ScrollableFeedProps = {\r\n    forceScroll?: boolean;\r\n    animateScroll?: (element: HTMLElement, offset: number) => void;\r\n    onScrollComplete?: () => void;\r\n    changeDetectionFilter?: (previousProps: ScrollableFeedComponentProps, newProps: ScrollableFeedComponentProps) => boolean;\r\n    viewableDetectionEpsilon?: number;\r\n    className?: string;\r\n    onScroll?: (isAtBottom: boolean) => void;\r\n    debug?: boolean\r\n}\r\n\r\ntype ScrollableFeedComponentProps = React.PropsWithChildren<ScrollableFeedProps>;\r\n\r\nclass ScrollableFeed extends React.Component<React.PropsWithChildren<ScrollableFeedProps>> {\r\n    private readonly wrapperRef: React.RefObject<HTMLDivElement>;\r\n    private readonly bottomRef: React.RefObject<HTMLDivElement>;\r\n\r\n    constructor(props: ScrollableFeedProps) {\r\n        super(props);\r\n        this.bottomRef = React.createRef();\r\n        this.wrapperRef = React.createRef();\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n\r\n        if (this.props.debug) console.log(\"Component cstr\");\r\n    }\r\n\r\n    static defaultProps: ScrollableFeedProps = {\r\n        forceScroll: false,\r\n        animateScroll: (element: HTMLElement, offset: number): void => {\r\n            if (element.scrollBy) {\r\n                element.scrollBy({ top: offset });\r\n            }\r\n            else {\r\n                element.scrollTop = offset;\r\n            }\r\n        },\r\n        onScrollComplete: () => {},\r\n        changeDetectionFilter: () => true,\r\n        viewableDetectionEpsilon: 2,\r\n        onScroll: () => {},\r\n    };\r\n\r\n    getSnapshotBeforeUpdate(): boolean {\r\n        if (this.props.debug) console.log(\"Component \", this.getSnapshotBeforeUpdate.name);\r\n        if (this.wrapperRef.current && this.bottomRef.current) {\r\n            const { viewableDetectionEpsilon } = this.props;\r\n            return ScrollableFeed.isViewable(this.wrapperRef.current, this.bottomRef.current, viewableDetectionEpsilon!); //This argument is passed down to componentDidUpdate as 3rd parameter\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(previousProps: ScrollableFeedComponentProps, _previousState: any, snapshot: boolean): void {\r\n        if (this.props.debug) console.log(\"Component \", this.componentDidUpdate.name);\r\n        const { forceScroll, changeDetectionFilter } = this.props;\r\n        const isValidChange = changeDetectionFilter!(previousProps, this.props);\r\n        if (isValidChange && (forceScroll || snapshot) && this.bottomRef.current && this.wrapperRef.current) {\r\n            this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\r\n        }\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (this.props.debug) console.log(\"Component \", this.componentDidMount.name);\r\n        //Scroll to bottom from the start\r\n        if (this.bottomRef.current && this.wrapperRef.current) {\r\n            this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Scrolls a parent element such that the child element will be in view\r\n     * @param parent\r\n     * @param child\r\n     */\r\n    protected scrollParentToChild(parent: HTMLElement, child: HTMLElement): void {\r\n        const { viewableDetectionEpsilon } = this.props;\r\n        if (!ScrollableFeed.isViewable(parent, child, viewableDetectionEpsilon!)) {\r\n            //Source: https://stackoverflow.com/a/45411081/6316091\r\n            const parentRect = parent.getBoundingClientRect();\r\n            const childRect = child.getBoundingClientRect();\r\n\r\n            //Scroll by offset relative to parent\r\n            const scrollOffset = (childRect.top + parent.scrollTop) - parentRect.top;\r\n            const { animateScroll, onScrollComplete } = this.props;\r\n            if (animateScroll) {\r\n                animateScroll(parent, scrollOffset);\r\n                onScrollComplete!();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether a child element is visible within a parent element\r\n     *\r\n     * @param parent\r\n     * @param child\r\n     * @param epsilon\r\n     */\r\n    private static isViewable(parent: HTMLElement, child: HTMLElement, epsilon: number): boolean {\r\n        epsilon = epsilon || 0;\r\n\r\n        //Source: https://stackoverflow.com/a/45411081/6316091\r\n        const parentRect = parent.getBoundingClientRect();\r\n        const childRect = child.getBoundingClientRect();\r\n\r\n        const childTopIsViewable = (childRect.top >= parentRect.top);\r\n\r\n        const childOffsetToParentBottom = parentRect.top + parent.clientHeight - childRect.top;\r\n        const childBottomIsViewable = childOffsetToParentBottom + epsilon >= 0;\r\n\r\n        return childTopIsViewable && childBottomIsViewable;\r\n    }\r\n\r\n    /**\r\n     * Fires the onScroll event, sending isAtBottom boolean as its first parameter\r\n     */\r\n    protected handleScroll(): void {\r\n        const { viewableDetectionEpsilon, onScroll } = this.props;\r\n        if (onScroll && this.bottomRef.current && this.wrapperRef.current) {\r\n            const isAtBottom = ScrollableFeed.isViewable(this.wrapperRef.current, this.bottomRef.current, viewableDetectionEpsilon!);\r\n            onScroll(isAtBottom);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Scroll to the bottom\r\n     */\r\n    public scrollToBottom(): void {\r\n        if (this.bottomRef.current && this.wrapperRef.current) {\r\n            this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        if (this.props.debug) console.log(\"Component \", this.render.name);\r\n\r\n        const style: CSSProperties = {\r\n            maxHeight: \"inherit\",\r\n            height: \"inherit\",\r\n            overflowY: \"auto\",\r\n        };\r\n        const { children, className } = this.props;\r\n        return (\r\n            <div className={className} style={style} ref={this.wrapperRef} onScroll={this.handleScroll}>\r\n                {children}\r\n                <div ref={this.bottomRef}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScrollableFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}